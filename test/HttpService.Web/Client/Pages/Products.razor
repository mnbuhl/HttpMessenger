@page "/products"
@using HttpService.Service

<PageTitle>Products</PageTitle>

<h1>Products</h1>

@if (_products.Count > 0)
{
    @foreach (var product in _products)
    {
        <table class="product-table">
            <tr>
                <td>Id:</td>
                <td>@product.Id</td>
            </tr>
            <tr>
                <td>Name:</td>
                <td>@product.Name</td>
            </tr>
            <tr>
                <td>Price:</td>
                <td>$@(Convert.ToDouble(product.Price) / 100)</td>
            </tr>
            <tr>
                <td>Description:</td>
                <td>@product.Description</td>
            </tr>
            <tr>
                <td>Created At:</td>
                <td>@product.CreatedAt.ToShortDateString() @product.CreatedAt.ToShortTimeString()</td>
            </tr>
            <tr>
                <td>Updated At:</td>
                <td>@product.UpdatedAt.ToShortDateString() @product.CreatedAt.ToShortTimeString()</td>
            </tr>
        </table>
    }
}


@code {

    [Inject]
    private IHttpService? HttpService { get; set; }

    private IList<ProductDto> _products = new List<ProductDto>();

    protected override async Task OnInitializedAsync()
    {
        if (HttpService == null)
            return;

        var products = await HttpService.Get<IList<ProductDto>>("products");
        _products = products.Data!;
    }

}